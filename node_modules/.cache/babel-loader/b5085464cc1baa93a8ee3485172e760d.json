{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahwaiz Nathani\\\\Desktop\\\\mutrajim-fyp\\\\Mehnat-o-Musshakat\\\\src\\\\components\\\\uploadFile\\\\UploadFiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, state } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\nimport styles from './UploadFiles.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'json',\n  label: 'Simple JSON (.json)'\n}, {\n  value: 'arb',\n  label: 'ARB (.arb)'\n}, {\n  value: 'yml',\n  label: 'Ruby (.yml)'\n}, {\n  value: 'po',\n  label: 'Gettext (.po)'\n}, {\n  value: 'xml',\n  label: '.xml'\n}];\nexport default function UploadFiles() {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [Name, setFileName] = useState(\"\");\n  const [Type, setFileType] = useState(\"\");\n\n  const handleSubmit = e => {\n    //   e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    console.log(selectedFile);\n    console.log(formData);\n    var uid = '';\n    var fid = 0; //Upload File To Directory\n\n    createApiEndpoint(ENDPOINTS.FILEUPLOAD).create(formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => console.log(err)); //post file data in file setiing\n\n    const filedata = {\n      name: Name,\n      type: Type\n    };\n    createApiEndpoint(ENDPOINTS.FILESETTING).create(filedata).then(res => {\n      uid = sessionStorage.getItem('UserId');\n      fid = res.data.fileID;\n      console.log(res.data.fileID);\n    }).catch(err => console.log(err)); //Exract file data and add to database\n\n    createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n    setFileName(event.target.files[0].name);\n    setFileType(event.target.files[0].type);\n    console.log(event.target.files[0]);\n  };\n\n  const [state, setState] = useState('idle');\n\n  const onClickHandler = () => {\n    setState('loading');\n    setTimeout(() => {\n      setState('success');\n    }, 2000); // handleSubmit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.top,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.uploadFile,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadFiles.uploadFile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.fileSetting,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadFiles.fileSettings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pictureBox,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadFilePicture,\n          alt: \"upload File\",\n          className: styles.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.uploadMessage,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"uploadFiles.fileUpload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: styles.selectFormat,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n          shadow: true,\n          className: styles.button,\n          idleText: 'Upload Files',\n          buttonState: state,\n          onClick: () => {\n            onClickHandler();\n            handleSubmit();\n          },\n          loadingText: 'Uploading',\n          color: '#D09072'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadFiles, \"IF6Qd9jhz1ONVrVEu/VP6bP36eg=\");\n\n_c = UploadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"sources":["C:/Users/Shahwaiz Nathani/Desktop/mutrajim-fyp/Mehnat-o-Musshakat/src/components/uploadFile/UploadFiles.js"],"names":["React","Component","state","useState","Select","FormattedMessage","ReactiveButton","Context","styles","Header","uploadFilePicture","createApiEndpoint","ENDPOINTS","Link","options","value","label","UploadFiles","selectedFile","setSelectedFile","Name","setFileName","Type","setFileType","handleSubmit","e","formData","FormData","append","console","log","uid","fid","FILEUPLOAD","create","headers","then","res","catch","err","filedata","name","type","FILESETTING","sessionStorage","getItem","data","fileID","FILEDATAPUT","handleFileSelect","event","target","files","setState","onClickHandler","setTimeout","main","top","uploadFile","fileSetting","pictureBox","picture","uploadMessage","selectFormat","button"],"mappings":"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","sourcesContent":["import React, { Component, state } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\n\nimport styles from './UploadFiles.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport { Link } from 'react-router-dom';\n\n\nconst options = [\n    { value: 'json', label: 'Simple JSON (.json)' },\n    { value: 'arb', label: 'ARB (.arb)' },\n    { value: 'yml', label: 'Ruby (.yml)' },\n    { value: 'po', label: 'Gettext (.po)' },\n    { value: 'xml', label: '.xml' }\n]\n\n\n\nexport default function UploadFiles () {\n\n\n    const [selectedFile, setSelectedFile] = useState();\n    const [Name, setFileName] = useState(\"\");\n    const [Type, setFileType] = useState(\"\");\n\n    const handleSubmit = (e) => {\n    //   e.preventDefault();\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      console.log(selectedFile);\n      console.log(formData);\n      var uid = '';\n      var fid = 0;\n     \n      //Upload File To Directory\n      createApiEndpoint(ENDPOINTS.FILEUPLOAD).create(formData, {\n            headers: {\n            \"Content-Type\": \"multipart/form-data\"\n            }\n        }).then(res => {\n                console.log(res);\n        }).catch(err => console.log(err) )\n\n      //post file data in file setiing\n      const filedata = {name: Name, type: Type};\n      createApiEndpoint(ENDPOINTS.FILESETTING).create(filedata).\n            then(res => {\n                uid = sessionStorage.getItem('UserId');\n                fid = res.data.fileID;\n                console.log(res.data.fileID);\n                \n            }).\n            catch(err => console.log(err) )  \n\n      \n      //Exract file data and add to database\n      createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().\n            then(res => {\n              console.log(res.data);\n            }).\n            catch(err => console.log(err) )    \n         }\n\n    const handleFileSelect = (event) => {\n      setSelectedFile(event.target.files[0]);\n      setFileName(event.target.files[0].name);\n      setFileType(event.target.files[0].type);\n      console.log(event.target.files[0])\n    }\n\n\n\n    const [state, setState] = useState('idle');\n\n    const onClickHandler = () => {\n        setState('loading');\n        setTimeout(() => {\n            setState('success');\n        }, 2000);\n        // handleSubmit();\n    }\n\n\n    return (\n        <div className= {styles.main}>\n            <Header/>\n            <div className= {styles.top}>\n                <h1 className= {styles.uploadFile}>\n                    <FormattedMessage\n                    id = \"uploadFiles.uploadFile\"\n                    /> \n                </h1>\n\n                <p className= {styles.fileSetting}>\n                    <FormattedMessage\n                    id = \"uploadFiles.fileSettings\"\n                    /> \n                </p>\n                <div className = {styles.pictureBox}>\n                    <img src = {uploadFilePicture} alt = \"upload File\" className = {styles.picture}/>\n                    {/* <input className= {styles.browseFile}>\n                        <FormattedMessage\n                            id = \"uploadFiles.file\"\n                        />    \n                    </input> */}\n                    <input type=\"file\" onChange = {handleFileSelect}/> \n                   \n\n                    <p className= {styles.uploadMessage}>\n                        <FormattedMessage  \n                            id = \"uploadFiles.fileUpload\"\n                          />\n                    </p>\n\n                    <Select className = {styles.selectFormat} options={options} />\n\n                    <ReactiveButton shadow\n                        className = {styles.button} \n                        idleText={'Upload Files'}\n                        buttonState={state}\n                        onClick={()=> {onClickHandler(); handleSubmit();}}\n                        loadingText={'Uploading'}\n                        color={'#D09072'}\n                    />\n\n                </div>\n\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}