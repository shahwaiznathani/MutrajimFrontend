{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahwaiz Nathani\\\\Desktop\\\\mutrajim-fyp\\\\Mehnat-o-Musshakat\\\\src\\\\components\\\\uploadFile\\\\UploadFiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, state } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\nimport styles from './UploadFiles.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport { Link } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'json',\n  label: 'Simple JSON (.json)'\n} // { value: 'arb', label: 'ARB (.arb)' },\n// { value: 'yml', label: 'Ruby (.yml)' },\n// { value: 'po', label: 'Gettext (.po)' },\n// { value: 'xml', label: '.xml' }\n];\nexport default function UploadFiles() {\n  _s();\n\n  //Notifier Settings\n  const navigate = useNavigate();\n  var toastMixin = Swal.mixin({\n    toast: true,\n    icon: 'success',\n    title: 'General Title',\n    animation: false,\n    position: 'top-right',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: toast => {\n      toast.addEventListener('mouseenter', Swal.stopTimer);\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\n    }\n  });\n  const [selectedFile, setSelectedFile] = useState();\n  const [Name, setFileName] = useState(\"\");\n  const [Type, setFileType] = useState(\"\");\n\n  const handleSubmit = e => {\n    //   e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    console.log(selectedFile);\n    console.log(formData);\n\n    if (Type === \"application/json\") {\n      //Upload File To Directory\n      createApiEndpoint(ENDPOINTS.FILEUPLOAD).create(formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        console.log(res);\n      }).catch(err => console.log(err)); //post file data in file setiing\n\n      const filedata = {\n        name: Name,\n        type: Type\n      };\n      createApiEndpoint(ENDPOINTS.FILESETTING).create(filedata).then(res => {\n        var uid = sessionStorage.getItem('UserId');\n        var fid = res.data.fileID;\n        console.log(res.data.fileID); //Patch Locale Id to User Table\n\n        createApiEndpoint(ENDPOINTS.PATCHFILEID).create({\n          UserId: uid,\n          FileId: fid\n        }).then(res => {\n          console.log(res.data);\n        }).catch(err => console.log(err));\n        success();\n        onClickHandler();\n      }).catch(err => console.log(err)); //Exract file data and add to database\n      // createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().\n      //     then(res => {\n      //     console.log(res.data);\n      //     console.log(\"here\")\n      //     }).\n      //     catch(err => console.log(err) )    \n    } else {\n      error();\n    }\n  };\n\n  const fileDatatoDb = () => {\n    //Exract file data and add to database\n    createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().then(res => {\n      console.log(res.data);\n      console.log(\"here\");\n    }).catch(err => console.log(err));\n  };\n\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n    setFileName(event.target.files[0].name);\n    setFileType(event.target.files[0].type);\n    console.log(event.target.files[0]);\n  };\n\n  const [state, setState] = useState('idle');\n\n  const onClickHandler = () => {\n    setState('loading');\n    setTimeout(() => {\n      setState('success');\n    }, 2000);\n  };\n\n  const success = () => {\n    toastMixin.fire({\n      animation: true,\n      title: 'File Upload Successful!'\n    });\n    navigate('/home/keyPage');\n  };\n\n  const error = () => {\n    toastMixin.fire({\n      title: 'File format not supported!',\n      icon: 'error'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.top,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.uploadFile,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadFiles.uploadFile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.fileSetting,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadFiles.fileSettings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pictureBox,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadFilePicture,\n          alt: \"upload File\",\n          className: styles.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.uploadMessage,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"uploadFiles.fileUpload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: styles.selectFormat,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonDiv,\n          children: /*#__PURE__*/_jsxDEV(ReactiveButton, {\n            shadow: true,\n            idleText: 'Upload Files',\n            buttonState: state,\n            onClick: () => {\n              handleSubmit();\n            },\n            loadingText: 'Uploading',\n            color: '#D09072'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadFiles, \"+fWPyl9DvyO8ZOxgBrOmejDhKAc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UploadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"sources":["C:/Users/Shahwaiz Nathani/Desktop/mutrajim-fyp/Mehnat-o-Musshakat/src/components/uploadFile/UploadFiles.js"],"names":["React","Component","state","useState","Select","FormattedMessage","ReactiveButton","Context","styles","Header","uploadFilePicture","createApiEndpoint","ENDPOINTS","Link","Swal","useNavigate","options","value","label","UploadFiles","navigate","toastMixin","mixin","toast","icon","title","animation","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","selectedFile","setSelectedFile","Name","setFileName","Type","setFileType","handleSubmit","e","formData","FormData","append","console","log","FILEUPLOAD","create","headers","then","res","catch","err","filedata","name","type","FILESETTING","uid","sessionStorage","getItem","fid","data","fileID","PATCHFILEID","UserId","FileId","success","onClickHandler","error","fileDatatoDb","FILEDATAPUT","handleFileSelect","event","target","files","setState","setTimeout","fire","main","top","uploadFile","fileSetting","pictureBox","picture","uploadMessage","selectFormat","buttonDiv"],"mappings":"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","sourcesContent":["import React, { Component, state } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\n\nimport styles from './UploadFiles.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport { Link } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst options = [\n    { value: 'json', label: 'Simple JSON (.json)' },\n    // { value: 'arb', label: 'ARB (.arb)' },\n    // { value: 'yml', label: 'Ruby (.yml)' },\n    // { value: 'po', label: 'Gettext (.po)' },\n    // { value: 'xml', label: '.xml' }\n]\n\n\n\nexport default function UploadFiles () {\n\n    //Notifier Settings\n    const navigate = useNavigate();\n    var toastMixin = Swal.mixin({\n        toast: true,\n        icon: 'success',\n        title: 'General Title',\n        animation: false,\n        position: 'top-right',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer)\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\n        }\n      });\n\n    const [selectedFile, setSelectedFile] = useState();\n    const [Name, setFileName] = useState(\"\");\n    const [Type, setFileType] = useState(\"\");\n\n    const handleSubmit = (e) => {\n    //   e.preventDefault();\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      console.log(selectedFile);\n      console.log(formData);\n      if(Type === \"application/json\"){\n            //Upload File To Directory\n            createApiEndpoint(ENDPOINTS.FILEUPLOAD).create(formData, {\n                headers: {\n                \"Content-Type\": \"multipart/form-data\"\n                }\n                }).then(res => {\n                        console.log(res);\n                }).catch(err => console.log(err) );\n\n            //post file data in file setiing\n            const filedata = {name: Name, type: Type};\n            createApiEndpoint(ENDPOINTS.FILESETTING).create(filedata).\n                then(res => {\n                    var uid = sessionStorage.getItem('UserId');\n                    var fid = res.data.fileID;\n                    console.log(res.data.fileID);\n                    //Patch Locale Id to User Table\n                    createApiEndpoint(ENDPOINTS.PATCHFILEID).create({UserId:uid, FileId:fid}).\n                        then(res => {\n                            console.log(res.data);\n                        }).\n                        catch(err => console.log(err) ) ;\n                          \n                    success();    \n                    onClickHandler();\n                }).\n                catch(err => console.log(err) )  \n\n            \n            //Exract file data and add to database\n            // createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().\n            //     then(res => {\n            //     console.log(res.data);\n            //     console.log(\"here\")\n            //     }).\n            //     catch(err => console.log(err) )    \n        }\n        else{\n            error();\n        }\n      \n    }\n    const fileDatatoDb = () => {\n        //Exract file data and add to database\n            createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().\n                then(res => {\n                console.log(res.data);\n                console.log(\"here\")\n                }).\n                catch(err => console.log(err) )    \n    }\n    const handleFileSelect = (event) => {\n      setSelectedFile(event.target.files[0]);\n      setFileName(event.target.files[0].name);\n      setFileType(event.target.files[0].type);\n      console.log(event.target.files[0])\n    }\n\n\n\n    const [state, setState] = useState('idle');\n\n    const onClickHandler = () => {\n        setState('loading');\n        setTimeout(() => {\n            setState('success');\n        }, 2000);\n    }\n\n    const success = () => {\n        toastMixin.fire({\n        animation: true,\n        title: 'File Upload Successful!'\n        });\n        navigate('/home/keyPage');\n    }\n\n     const error = () => {\n        toastMixin.fire({\n        title: 'File format not supported!',\n        icon: 'error'\n        });\n    }\n\n    return (\n        <div className= {styles.main}>\n            <Header/>\n            <div className= {styles.top}>\n                <h1 className= {styles.uploadFile}>\n                    <FormattedMessage\n                    id = \"uploadFiles.uploadFile\"\n                    /> \n                </h1>\n\n                <p className= {styles.fileSetting}>\n                    <FormattedMessage\n                    id = \"uploadFiles.fileSettings\"\n                    /> \n                </p>\n                <div className = {styles.pictureBox}>\n                    <img src = {uploadFilePicture} alt = \"upload File\" className = {styles.picture}/>\n\n                    <input type=\"file\" onChange = {handleFileSelect}/> \n                   \n\n                    <p className= {styles.uploadMessage}>\n                        <FormattedMessage  \n                            id = \"uploadFiles.fileUpload\"\n                          />\n                    </p>\n\n                    <Select className = {styles.selectFormat} options={options} />\n                    <div className= {styles.buttonDiv}>\n                        <ReactiveButton shadow \n                            idleText={'Upload Files'}\n                            buttonState={state}\n                            onClick={()=> {handleSubmit();}}\n                            loadingText={'Uploading'}\n                            color={'#D09072'}\n                        />\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}