{"ast":null,"code":"import { useState, useRef, useCallback, useEffect } from 'react';\nvar PRE_ENTER = 0;\nvar ENTERING = 1;\nvar ENTERED = 2;\nvar PRE_EXIT = 3;\nvar EXITING = 4;\nvar EXITED = 5;\nvar UNMOUNTED = 6;\nvar STATES = ['preEnter', 'entering', 'entered', 'preExit', 'exiting', 'exited', 'unmounted'];\n\nvar startOrEnd = function startOrEnd(unmounted) {\n  return unmounted ? UNMOUNTED : EXITED;\n};\n\nvar updateState = function updateState(state, setState, latestState, timeoutId, onChange) {\n  clearTimeout(timeoutId.current);\n  setState(state);\n  latestState.current = state;\n  onChange && onChange({\n    state: STATES[state]\n  });\n};\n\nvar useTransition = function useTransition(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$enter = _ref.enter,\n      enter = _ref$enter === void 0 ? true : _ref$enter,\n      _ref$exit = _ref.exit,\n      exit = _ref$exit === void 0 ? true : _ref$exit,\n      preEnter = _ref.preEnter,\n      preExit = _ref.preExit,\n      timeout = _ref.timeout,\n      initialEntered = _ref.initialEntered,\n      mountOnEnter = _ref.mountOnEnter,\n      unmountOnExit = _ref.unmountOnExit,\n      onChange = _ref.onChange;\n\n  var _useState = useState(initialEntered ? ENTERED : startOrEnd(mountOnEnter)),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var latestState = useRef(state);\n  var timeoutId = useRef();\n  var enterTimeout, exitTimeout;\n\n  if (typeof timeout === 'object') {\n    enterTimeout = timeout.enter;\n    exitTimeout = timeout.exit;\n  } else {\n    enterTimeout = exitTimeout = timeout;\n  }\n\n  var endTransition = useCallback(function () {\n    var newState;\n\n    switch (latestState.current) {\n      case ENTERING:\n      case PRE_ENTER:\n        newState = ENTERED;\n        break;\n\n      case EXITING:\n      case PRE_EXIT:\n        newState = startOrEnd(unmountOnExit);\n        break;\n    }\n\n    if (newState !== undefined) {\n      updateState(newState, setState, latestState, timeoutId, onChange);\n    }\n  }, [onChange, unmountOnExit]);\n  var toggle = useCallback(function (toEnter) {\n    var transitState = function transitState(newState) {\n      updateState(newState, setState, latestState, timeoutId, onChange);\n\n      switch (newState) {\n        case ENTERING:\n          if (enterTimeout >= 0) timeoutId.current = setTimeout(endTransition, enterTimeout);\n          break;\n\n        case EXITING:\n          if (exitTimeout >= 0) timeoutId.current = setTimeout(endTransition, exitTimeout);\n          break;\n\n        case PRE_ENTER:\n        case PRE_EXIT:\n          timeoutId.current = setTimeout(function () {\n            return transitState(newState + 1);\n          }, 0);\n          break;\n      }\n    };\n\n    var enterStage = latestState.current <= ENTERED;\n    if (typeof toEnter !== 'boolean') toEnter = !enterStage;\n\n    if (toEnter) {\n      if (!enterStage) {\n        transitState(enter ? preEnter ? PRE_ENTER : ENTERING : ENTERED);\n      }\n    } else {\n      if (enterStage) {\n        transitState(exit ? preExit ? PRE_EXIT : EXITING : startOrEnd(unmountOnExit));\n      }\n    }\n  }, [endTransition, onChange, enter, exit, preEnter, preExit, enterTimeout, exitTimeout, unmountOnExit]);\n  useEffect(function () {\n    return function () {\n      return clearTimeout(timeoutId.current);\n    };\n  }, []);\n  return [STATES[state], toggle, endTransition];\n};\n\nexport { useTransition as default, useTransition };","map":{"version":3,"sources":["C:/Users/Shahwaiz Nathani/Desktop/mutrajim-fyp/Mehnat-o-Musshakat/node_modules/react-transition-state/dist/index.es.js"],"names":["useState","useRef","useCallback","useEffect","PRE_ENTER","ENTERING","ENTERED","PRE_EXIT","EXITING","EXITED","UNMOUNTED","STATES","startOrEnd","unmounted","updateState","state","setState","latestState","timeoutId","onChange","clearTimeout","current","useTransition","_temp","_ref","_ref$enter","enter","_ref$exit","exit","preEnter","preExit","timeout","initialEntered","mountOnEnter","unmountOnExit","_useState","enterTimeout","exitTimeout","endTransition","newState","undefined","toggle","toEnter","transitState","setTimeout","enterStage","default"],"mappings":"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","sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\n\nvar PRE_ENTER = 0;\nvar ENTERING = 1;\nvar ENTERED = 2;\nvar PRE_EXIT = 3;\nvar EXITING = 4;\nvar EXITED = 5;\nvar UNMOUNTED = 6;\nvar STATES = ['preEnter', 'entering', 'entered', 'preExit', 'exiting', 'exited', 'unmounted'];\n\nvar startOrEnd = function startOrEnd(unmounted) {\n  return unmounted ? UNMOUNTED : EXITED;\n};\n\nvar updateState = function updateState(state, setState, latestState, timeoutId, onChange) {\n  clearTimeout(timeoutId.current);\n  setState(state);\n  latestState.current = state;\n  onChange && onChange({\n    state: STATES[state]\n  });\n};\n\nvar useTransition = function useTransition(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$enter = _ref.enter,\n      enter = _ref$enter === void 0 ? true : _ref$enter,\n      _ref$exit = _ref.exit,\n      exit = _ref$exit === void 0 ? true : _ref$exit,\n      preEnter = _ref.preEnter,\n      preExit = _ref.preExit,\n      timeout = _ref.timeout,\n      initialEntered = _ref.initialEntered,\n      mountOnEnter = _ref.mountOnEnter,\n      unmountOnExit = _ref.unmountOnExit,\n      onChange = _ref.onChange;\n\n  var _useState = useState(initialEntered ? ENTERED : startOrEnd(mountOnEnter)),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var latestState = useRef(state);\n  var timeoutId = useRef();\n  var enterTimeout, exitTimeout;\n\n  if (typeof timeout === 'object') {\n    enterTimeout = timeout.enter;\n    exitTimeout = timeout.exit;\n  } else {\n    enterTimeout = exitTimeout = timeout;\n  }\n\n  var endTransition = useCallback(function () {\n    var newState;\n\n    switch (latestState.current) {\n      case ENTERING:\n      case PRE_ENTER:\n        newState = ENTERED;\n        break;\n\n      case EXITING:\n      case PRE_EXIT:\n        newState = startOrEnd(unmountOnExit);\n        break;\n    }\n\n    if (newState !== undefined) {\n      updateState(newState, setState, latestState, timeoutId, onChange);\n    }\n  }, [onChange, unmountOnExit]);\n  var toggle = useCallback(function (toEnter) {\n    var transitState = function transitState(newState) {\n      updateState(newState, setState, latestState, timeoutId, onChange);\n\n      switch (newState) {\n        case ENTERING:\n          if (enterTimeout >= 0) timeoutId.current = setTimeout(endTransition, enterTimeout);\n          break;\n\n        case EXITING:\n          if (exitTimeout >= 0) timeoutId.current = setTimeout(endTransition, exitTimeout);\n          break;\n\n        case PRE_ENTER:\n        case PRE_EXIT:\n          timeoutId.current = setTimeout(function () {\n            return transitState(newState + 1);\n          }, 0);\n          break;\n      }\n    };\n\n    var enterStage = latestState.current <= ENTERED;\n    if (typeof toEnter !== 'boolean') toEnter = !enterStage;\n\n    if (toEnter) {\n      if (!enterStage) {\n        transitState(enter ? preEnter ? PRE_ENTER : ENTERING : ENTERED);\n      }\n    } else {\n      if (enterStage) {\n        transitState(exit ? preExit ? PRE_EXIT : EXITING : startOrEnd(unmountOnExit));\n      }\n    }\n  }, [endTransition, onChange, enter, exit, preEnter, preExit, enterTimeout, exitTimeout, unmountOnExit]);\n  useEffect(function () {\n    return function () {\n      return clearTimeout(timeoutId.current);\n    };\n  }, []);\n  return [STATES[state], toggle, endTransition];\n};\n\nexport { useTransition as default, useTransition };\n"]},"metadata":{},"sourceType":"module"}