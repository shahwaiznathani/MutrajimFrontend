{"ast":null,"code":"import { Children, cloneElement } from 'react';\nimport { getName } from './utils.js';\n\nvar cloneChildren = function cloneChildren(children, startIndex, inRadioGroup) {\n  if (startIndex === void 0) {\n    startIndex = 0;\n  }\n\n  var index = startIndex;\n  var descendOverflow = false;\n  var items = Children.map(children, function (child) {\n    if (child === undefined || child === null) return null;\n    if (!child.type) return child;\n    var name = getName(child.type);\n\n    switch (name) {\n      case 'MenuItem':\n        {\n          if (inRadioGroup) {\n            var props = {\n              type: 'radio'\n            };\n            if (!child.props.disabled) props.index = index++;\n            return /*#__PURE__*/cloneElement(child, props);\n          }\n        }\n\n      case 'SubMenu':\n      case 'FocusableItem':\n        return child.props.disabled ? child : /*#__PURE__*/cloneElement(child, {\n          index: index++\n        });\n\n      default:\n        {\n          var innerChildren = child.props.children;\n          if (innerChildren === null || typeof innerChildren !== 'object') return child;\n          var desc = cloneChildren(innerChildren, index, inRadioGroup || name === 'MenuRadioGroup');\n          index = desc.index;\n\n          if (name === 'MenuGroup') {\n            var takeOverflow = !!child.props.takeOverflow;\n            var descOverflow = desc.descendOverflow;\n\n            if (process.env.NODE_ENV !== 'production' && (descendOverflow === descOverflow ? descOverflow : takeOverflow)) {\n              throw new Error('[React-Menu] Only one MenuGroup in a menu is allowed to have takeOverflow prop.');\n            }\n\n            descendOverflow = descendOverflow || descOverflow || takeOverflow;\n          }\n\n          return /*#__PURE__*/cloneElement(child, {\n            children: desc.items\n          });\n        }\n    }\n  });\n  return {\n    items: items,\n    index: index,\n    descendOverflow: descendOverflow\n  };\n};\n\nexport { cloneChildren };","map":{"version":3,"sources":["C:/Users/Shahwaiz Nathani/Desktop/mutrajim-fyp/Mehnat-o-Musshakat/node_modules/@szhsin/react-menu/dist/es/utils/cloneChildren.js"],"names":["Children","cloneElement","getName","cloneChildren","children","startIndex","inRadioGroup","index","descendOverflow","items","map","child","undefined","type","name","props","disabled","innerChildren","desc","takeOverflow","descOverflow","process","env","NODE_ENV","Error"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,YAAnB,QAAuC,OAAvC;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CC,YAA7C,EAA2D;AAC7E,MAAID,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,CAAb;AACD;;AAED,MAAIE,KAAK,GAAGF,UAAZ;AACA,MAAIG,eAAe,GAAG,KAAtB;AACA,MAAIC,KAAK,GAAGT,QAAQ,CAACU,GAAT,CAAaN,QAAb,EAAuB,UAAUO,KAAV,EAAiB;AAClD,QAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C,OAAO,IAAP;AAC3C,QAAI,CAACA,KAAK,CAACE,IAAX,EAAiB,OAAOF,KAAP;AACjB,QAAIG,IAAI,GAAGZ,OAAO,CAACS,KAAK,CAACE,IAAP,CAAlB;;AAEA,YAAQC,IAAR;AACE,WAAK,UAAL;AACE;AACE,cAAIR,YAAJ,EAAkB;AAChB,gBAAIS,KAAK,GAAG;AACVF,cAAAA,IAAI,EAAE;AADI,aAAZ;AAGA,gBAAI,CAACF,KAAK,CAACI,KAAN,CAAYC,QAAjB,EAA2BD,KAAK,CAACR,KAAN,GAAcA,KAAK,EAAnB;AAC3B,mBAAO,aAAaN,YAAY,CAACU,KAAD,EAAQI,KAAR,CAAhC;AACD;AACF;;AAEH,WAAK,SAAL;AACA,WAAK,eAAL;AACE,eAAOJ,KAAK,CAACI,KAAN,CAAYC,QAAZ,GAAuBL,KAAvB,GAA+B,aAAaV,YAAY,CAACU,KAAD,EAAQ;AACrEJ,UAAAA,KAAK,EAAEA,KAAK;AADyD,SAAR,CAA/D;;AAIF;AACE;AACE,cAAIU,aAAa,GAAGN,KAAK,CAACI,KAAN,CAAYX,QAAhC;AACA,cAAIa,aAAa,KAAK,IAAlB,IAA0B,OAAOA,aAAP,KAAyB,QAAvD,EAAiE,OAAON,KAAP;AACjE,cAAIO,IAAI,GAAGf,aAAa,CAACc,aAAD,EAAgBV,KAAhB,EAAuBD,YAAY,IAAIQ,IAAI,KAAK,gBAAhD,CAAxB;AACAP,UAAAA,KAAK,GAAGW,IAAI,CAACX,KAAb;;AAEA,cAAIO,IAAI,KAAK,WAAb,EAA0B;AACxB,gBAAIK,YAAY,GAAG,CAAC,CAACR,KAAK,CAACI,KAAN,CAAYI,YAAjC;AACA,gBAAIC,YAAY,GAAGF,IAAI,CAACV,eAAxB;;AAEA,gBAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,KAA0Cf,eAAe,KAAKY,YAApB,GAAmCA,YAAnC,GAAkDD,YAA5F,CAAJ,EAA+G;AAC7G,oBAAM,IAAIK,KAAJ,CAAU,iFAAV,CAAN;AACD;;AAEDhB,YAAAA,eAAe,GAAGA,eAAe,IAAIY,YAAnB,IAAmCD,YAArD;AACD;;AAED,iBAAO,aAAalB,YAAY,CAACU,KAAD,EAAQ;AACtCP,YAAAA,QAAQ,EAAEc,IAAI,CAACT;AADuB,WAAR,CAAhC;AAGD;AAvCL;AAyCD,GA9CW,CAAZ;AA+CA,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELF,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,eAAe,EAAEA;AAHZ,GAAP;AAKD,CA3DD;;AA6DA,SAASL,aAAT","sourcesContent":["import { Children, cloneElement } from 'react';\nimport { getName } from './utils.js';\n\nvar cloneChildren = function cloneChildren(children, startIndex, inRadioGroup) {\n  if (startIndex === void 0) {\n    startIndex = 0;\n  }\n\n  var index = startIndex;\n  var descendOverflow = false;\n  var items = Children.map(children, function (child) {\n    if (child === undefined || child === null) return null;\n    if (!child.type) return child;\n    var name = getName(child.type);\n\n    switch (name) {\n      case 'MenuItem':\n        {\n          if (inRadioGroup) {\n            var props = {\n              type: 'radio'\n            };\n            if (!child.props.disabled) props.index = index++;\n            return /*#__PURE__*/cloneElement(child, props);\n          }\n        }\n\n      case 'SubMenu':\n      case 'FocusableItem':\n        return child.props.disabled ? child : /*#__PURE__*/cloneElement(child, {\n          index: index++\n        });\n\n      default:\n        {\n          var innerChildren = child.props.children;\n          if (innerChildren === null || typeof innerChildren !== 'object') return child;\n          var desc = cloneChildren(innerChildren, index, inRadioGroup || name === 'MenuRadioGroup');\n          index = desc.index;\n\n          if (name === 'MenuGroup') {\n            var takeOverflow = !!child.props.takeOverflow;\n            var descOverflow = desc.descendOverflow;\n\n            if (process.env.NODE_ENV !== 'production' && (descendOverflow === descOverflow ? descOverflow : takeOverflow)) {\n              throw new Error('[React-Menu] Only one MenuGroup in a menu is allowed to have takeOverflow prop.');\n            }\n\n            descendOverflow = descendOverflow || descOverflow || takeOverflow;\n          }\n\n          return /*#__PURE__*/cloneElement(child, {\n            children: desc.items\n          });\n        }\n    }\n  });\n  return {\n    items: items,\n    index: index,\n    descendOverflow: descendOverflow\n  };\n};\n\nexport { cloneChildren };\n"]},"metadata":{},"sourceType":"module"}