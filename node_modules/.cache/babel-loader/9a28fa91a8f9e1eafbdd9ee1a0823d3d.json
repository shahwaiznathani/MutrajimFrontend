{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahwaiz Nathani\\\\Desktop\\\\mutrajim-fyp\\\\Mehnat-o-Musshakat\\\\src\\\\components\\\\UploadImages\\\\UploadImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './UploadImages.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport ImageTranslation from '../ImageTranslation/ImageTranslation.js';\nimport axios from 'axios';\nimport Logo from \"../Logo/MutrajimStandAlone.png\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadImages() {\n  _s();\n\n  //Notifier Settings\n  const navigate = useNavigate();\n  var toastMixin = Swal.mixin({\n    toast: true,\n    icon: 'success',\n    title: 'General Title',\n    animation: false,\n    position: 'top-right',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: toast => {\n      toast.addEventListener('mouseenter', Swal.stopTimer);\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\n    }\n  });\n  const [state, setState] = useState('idle');\n  const [selectedFile, setSelectedFile] = useState();\n  const [loading, setLoading] = useState(false); // const [extractedText, setExtractedText] = useState('');\n\n  const handleSubmit = e => {\n    const data = new FormData();\n    data.append('file', selectedFile);\n    console.log(selectedFile);\n    console.log(data);\n    setLoading(true); //Image translation api\n\n    axios.post('http://127.0.0.1:5000/read', data).then(response => response).then(result => {\n      console.log(JSON.stringify(result.data));\n      setExtractedText(JSON.stringify(result.data));\n      setLoading(false);\n      success(result.data);\n      onClickHandler();\n    }).catch(error => console.log('error', error));\n  };\n\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const onClickHandler = () => {\n    setState('loading');\n    setTimeout(() => {\n      setState('success');\n    }, 2000);\n  };\n\n  const success = extractedText => {\n    toastMixin.fire({\n      animation: true,\n      title: 'File Upload Successful!'\n    });\n    navigate('/home/ImageTranslation', {\n      state: {\n        selectedFile,\n        extractedText\n      }\n    });\n  };\n\n  const error = () => {\n    toastMixin.fire({\n      title: 'File format not supported!',\n      icon: 'error'\n    });\n  };\n\n  const context = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: styles.dropDown,\n      value: context.locale,\n      onChange: context.selectLang,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ur\",\n        children: \"Urdu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.top,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.uploadFile,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadImages.uploadImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.fileSetting,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadImage.imageSettings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pictureBox,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadFilePicture,\n          alt: \"upload File\",\n          className: styles.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.browseFile,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"uploadImage.image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n          className: styles.button,\n          idleText: 'Upload Files',\n          buttonState: state,\n          onClick: () => {\n            handleSubmit();\n          },\n          loadingText: 'Uploading',\n          color: '#d09072'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loaderView,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.logoImg,\n        src: Logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadImages, \"XvyXPgW0W/4eIE38/arexCg9qKw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UploadImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImages\");","map":{"version":3,"sources":["C:/Users/Shahwaiz Nathani/Desktop/mutrajim-fyp/Mehnat-o-Musshakat/src/components/UploadImages/UploadImages.js"],"names":["React","useContext","useState","Select","FormattedMessage","ReactiveButton","Context","useNavigate","styles","Header","uploadFilePicture","ImageTranslation","axios","Logo","Swal","UploadImages","navigate","toastMixin","mixin","toast","icon","title","animation","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","state","setState","selectedFile","setSelectedFile","loading","setLoading","handleSubmit","e","data","FormData","append","console","log","post","then","response","result","JSON","stringify","setExtractedText","success","onClickHandler","catch","error","handleFileSelect","event","target","files","setTimeout","extractedText","fire","context","main","dropDown","locale","selectLang","top","uploadFile","fileSetting","pictureBox","picture","browseFile","button","loaderView","logoImg"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\nimport { useNavigate } from 'react-router-dom';\n\nimport styles from './UploadImages.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport ImageTranslation from '../ImageTranslation/ImageTranslation.js';\nimport axios from 'axios';\nimport Logo from \"../Logo/MutrajimStandAlone.png\"\nimport Swal from \"sweetalert2\";\n\n\nexport default function UploadImages () {\n\n    //Notifier Settings\n    const navigate = useNavigate();\n    var toastMixin = Swal.mixin({\n        toast: true,\n        icon: 'success',\n        title: 'General Title',\n        animation: false,\n        position: 'top-right',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer)\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\n        }\n      });\n\n    const [state, setState] = useState('idle');\n    const [selectedFile, setSelectedFile] = useState();\n    const [loading, setLoading] = useState(false);\n    // const [extractedText, setExtractedText] = useState('');\n      \n\n    const handleSubmit = (e) => {\n\n      const data = new FormData();\n      data.append('file', selectedFile);\n      console.log(selectedFile);\n      console.log(data);\n      setLoading(true);  \n      //Image translation api\n      axios.post('http://127.0.0.1:5000/read', data)\n        .then(response => response)\n        .then(result => {\n            console.log(JSON.stringify(result.data));\n            setExtractedText(JSON.stringify(result.data));\n            setLoading(false);\n            success(result.data);    \n            onClickHandler();  \n        })\n        .catch(error => console.log('error', error));\n    }\n    const handleFileSelect = (event) => {\n      setSelectedFile(event.target.files[0]);\n      \n    }\n\n    const onClickHandler = () => {\n        setState('loading');\n        setTimeout(() => {\n            setState('success');\n        }, 2000);\n    }\n\n    const success = (extractedText) => {\n        toastMixin.fire({\n        animation: true,\n        title: 'File Upload Successful!'\n        });\n        navigate('/home/ImageTranslation', {state: {selectedFile, extractedText}});\n    }\n\n     const error = () => {\n        toastMixin.fire({\n        title: 'File format not supported!',\n        icon: 'error'\n        });\n    }\n\n    const context = useContext(Context);\n\n    return (\n        <div className= {styles.main}>\n            <Header/>\n            <select className = {styles.dropDown} value = {context.locale} onChange={context.selectLang}>\n                <option value = \"en\">English</option>\n                <option value = \"ur\">Urdu</option>\n            </select> \n            <div className= {styles.top}>\n                <h1 className= {styles.uploadFile}>\n                    <FormattedMessage\n                    id = \"uploadImages.uploadImage\"\n                    /> \n                </h1>   \n\n                <p className= {styles.fileSetting}>\n                    <FormattedMessage\n                    id = \"uploadImage.imageSettings\"\n                    /> \n                </p>\n                <div className = {styles.pictureBox}>\n                    <img src = {uploadFilePicture} alt = \"upload File\" className = {styles.picture}/>\n                    <p className= {styles.browseFile}>\n                        <FormattedMessage\n                            id = \"uploadImage.image\"\n                        />    \n                    </p>\n\n                    <br/>\n                    <input type=\"file\" onChange = {handleFileSelect}/> \n                    <ReactiveButton\n                        className = {styles.button} \n                        idleText={'Upload Files'}\n                        buttonState={state}\n                        onClick={()=> { handleSubmit();}}\n                        loadingText={'Uploading'}\n                        color={'#d09072'}\n                    />\n\n                </div>\n\n            </div>\n            {loading && <div className={styles.loaderView}>\n            <img className={styles.logoImg} src={Logo} />\n            </div>}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}