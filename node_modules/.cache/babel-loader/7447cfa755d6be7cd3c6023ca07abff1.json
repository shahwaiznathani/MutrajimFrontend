{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahwaiz Nathani\\\\Desktop\\\\mutrajim-fyp\\\\Mehnat-o-Musshakat\\\\src\\\\components\\\\UploadImages\\\\UploadImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './UploadImages.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport ImageTranslation from '../ImageTranslation/ImageTranslation.js';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport axios from 'axios';\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadImages() {\n  _s();\n\n  //Notifier Settings\n  const navigate = useNavigate();\n  var toastMixin = Swal.mixin({\n    toast: true,\n    icon: 'success',\n    title: 'General Title',\n    animation: false,\n    position: 'top-right',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: toast => {\n      toast.addEventListener('mouseenter', Swal.stopTimer);\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\n    }\n  });\n  const [state, setState] = useState('idle');\n  const [selectedFile, setSelectedFile] = useState();\n  const [Name, setFileName] = useState(\"\");\n  const [Type, setFileType] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = e => {\n    const data = new FormData();\n    data.append('file', selectedFile);\n    console.log(selectedFile);\n    console.log(data); //Image translation api\n\n    axios.post('http://127.0.0.1:5000/read', data).then(response => response).then(result => {\n      console.log(JSON.stringify(result.data));\n      success();\n      onClickHandler();\n    }).catch(error => console.log('error', error));\n  };\n\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n    setFileName(event.target.files[0].name);\n    setFileType(event.target.files[0].type);\n  };\n\n  const onClickHandler = () => {\n    setState('loading');\n    setTimeout(() => {\n      setState('success');\n    }, 2000);\n  };\n\n  const success = () => {\n    toastMixin.fire({\n      animation: true,\n      title: 'File Upload Successful!'\n    });\n    navigate('/home/ImageTranslation');\n  };\n\n  const error = () => {\n    toastMixin.fire({\n      title: 'File format not supported!',\n      icon: 'error'\n    });\n  };\n\n  const context = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: styles.dropDown,\n      value: context.locale,\n      onChange: context.selectLang,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ur\",\n        children: \"Urdu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.top,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.uploadFile,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadImages.uploadImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.fileSetting,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadImage.imageSettings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pictureBox,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadFilePicture,\n          alt: \"upload File\",\n          className: styles.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.browseFile,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"uploadImage.image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n          className: styles.button,\n          idleText: 'Upload Files',\n          buttonState: state,\n          onClick: () => {\n            handleSubmit();\n          },\n          loadingText: 'Uploading',\n          color: '#d09072'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadImages, \"XGdAcankurZ7P42RysQhhChej68=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UploadImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImages\");","map":{"version":3,"sources":["C:/Users/Shahwaiz Nathani/Desktop/mutrajim-fyp/Mehnat-o-Musshakat/src/components/UploadImages/UploadImages.js"],"names":["React","useContext","useState","Select","FormattedMessage","ReactiveButton","Context","useNavigate","styles","Header","uploadFilePicture","ImageTranslation","createApiEndpoint","ENDPOINTS","axios","Swal","UploadImages","navigate","toastMixin","mixin","toast","icon","title","animation","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","state","setState","selectedFile","setSelectedFile","Name","setFileName","Type","setFileType","loading","setLoading","handleSubmit","e","data","FormData","append","console","log","post","then","response","result","JSON","stringify","success","onClickHandler","catch","error","handleFileSelect","event","target","files","name","type","setTimeout","fire","context","main","dropDown","locale","selectLang","top","uploadFile","fileSetting","pictureBox","picture","browseFile","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,iBAAP,MAA8B,cAA9B;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,WAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAGA,eAAe,SAASC,YAAT,GAAyB;AAAA;;AAEpC;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAIW,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAW;AACxBC,IAAAA,KAAK,EAAE,IADiB;AAExBC,IAAAA,IAAI,EAAE,SAFkB;AAGxBC,IAAAA,KAAK,EAAE,eAHiB;AAIxBC,IAAAA,SAAS,EAAE,KAJa;AAKxBC,IAAAA,QAAQ,EAAE,WALc;AAMxBC,IAAAA,iBAAiB,EAAE,KANK;AAOxBC,IAAAA,KAAK,EAAE,IAPiB;AAQxBC,IAAAA,gBAAgB,EAAE,IARM;AASxBC,IAAAA,OAAO,EAAGR,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACS,gBAAN,CAAuB,YAAvB,EAAqCd,IAAI,CAACe,SAA1C;AACAV,MAAAA,KAAK,CAACS,gBAAN,CAAuB,YAAvB,EAAqCd,IAAI,CAACgB,WAA1C;AACD;AAZuB,GAAX,CAAjB;AAeA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,MAAD,CAAlC;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,EAAhD;AACA,QAAM,CAACkC,IAAD,EAAOC,WAAP,IAAsBnC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACoC,IAAD,EAAOC,WAAP,IAAsBrC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsC,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,KAAD,CAAtC;;AAGA,QAAMwC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAD,IAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBZ,YAApB;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAL0B,CAO1B;;AACA9B,IAAAA,KAAK,CAACmC,IAAN,CAAW,4BAAX,EAAyCL,IAAzC,EACGM,IADH,CACQC,QAAQ,IAAIA,QADpB,EAEGD,IAFH,CAEQE,MAAM,IAAI;AAEZL,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,SAAL,CAAeF,MAAM,CAACR,IAAtB,CAAZ;AACAW,MAAAA,OAAO;AACPC,MAAAA,cAAc;AAEjB,KARH,EASGC,KATH,CASSC,KAAK,IAAIX,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBU,KAArB,CATlB;AAUD,GAlBD;;AAmBA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCzB,IAAAA,eAAe,CAACyB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAf;AACAzB,IAAAA,WAAW,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAAvB,CAAX;AACAxB,IAAAA,WAAW,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBE,IAAvB,CAAX;AACD,GAJD;;AAMA,QAAMR,cAAc,GAAG,MAAM;AACzBvB,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACAgC,IAAAA,UAAU,CAAC,MAAM;AACbhC,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GALD;;AAOA,QAAMsB,OAAO,GAAG,MAAM;AAClBrC,IAAAA,UAAU,CAACgD,IAAX,CAAgB;AAChB3C,MAAAA,SAAS,EAAE,IADK;AAEhBD,MAAAA,KAAK,EAAE;AAFS,KAAhB;AAIAL,IAAAA,QAAQ,CAAC,wBAAD,CAAR;AACH,GAND;;AAQC,QAAMyC,KAAK,GAAG,MAAM;AACjBxC,IAAAA,UAAU,CAACgD,IAAX,CAAgB;AAChB5C,MAAAA,KAAK,EAAE,4BADS;AAEhBD,MAAAA,IAAI,EAAE;AAFU,KAAhB;AAIH,GALA;;AAOD,QAAM8C,OAAO,GAAGlE,UAAU,CAACK,OAAD,CAA1B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAGE,MAAM,CAAC4D,IAAxB;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAI5D,MAAM,CAAC6D,QAA5B;AAAsC,MAAA,KAAK,EAAIF,OAAO,CAACG,MAAvD;AAA+D,MAAA,QAAQ,EAAEH,OAAO,CAACI,UAAjF;AAAA,8BACI;AAAQ,QAAA,KAAK,EAAG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAK,MAAA,SAAS,EAAG/D,MAAM,CAACgE,GAAxB;AAAA,8BACI;AAAI,QAAA,SAAS,EAAGhE,MAAM,CAACiE,UAAvB;AAAA,+BACI,QAAC,gBAAD;AACA,UAAA,EAAE,EAAG;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAG,QAAA,SAAS,EAAGjE,MAAM,CAACkE,WAAtB;AAAA,+BACI,QAAC,gBAAD;AACA,UAAA,EAAE,EAAG;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAK,QAAA,SAAS,EAAIlE,MAAM,CAACmE,UAAzB;AAAA,gCACI;AAAK,UAAA,GAAG,EAAIjE,iBAAZ;AAA+B,UAAA,GAAG,EAAG,aAArC;AAAmD,UAAA,SAAS,EAAIF,MAAM,CAACoE;AAAvE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAGpE,MAAM,CAACqE,UAAtB;AAAA,iCACI,QAAC,gBAAD;AACI,YAAA,EAAE,EAAG;AADT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAIlB;AAA/B;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI,QAAC,cAAD;AACI,UAAA,SAAS,EAAInD,MAAM,CAACsE,MADxB;AAEI,UAAA,QAAQ,EAAE,cAFd;AAGI,UAAA,WAAW,EAAE9C,KAHjB;AAII,UAAA,OAAO,EAAE,MAAK;AAAEU,YAAAA,YAAY;AAAI,WAJpC;AAKI,UAAA,WAAW,EAAE,WALjB;AAMI,UAAA,KAAK,EAAE;AANX;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAtHuB1B,Y;UAGHT,W;;;KAHGS,Y","sourcesContent":["import React, { useContext } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\nimport { useNavigate } from 'react-router-dom';\n\nimport styles from './UploadImages.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport ImageTranslation from '../ImageTranslation/ImageTranslation.js';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport axios from 'axios';\nimport Swal from \"sweetalert2\";\n\n\nexport default function UploadImages () {\n\n    //Notifier Settings\n    const navigate = useNavigate();\n    var toastMixin = Swal.mixin({\n        toast: true,\n        icon: 'success',\n        title: 'General Title',\n        animation: false,\n        position: 'top-right',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer)\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\n        }\n      });\n\n    const [state, setState] = useState('idle');\n    const [selectedFile, setSelectedFile] = useState();\n    const [Name, setFileName] = useState(\"\");\n    const [Type, setFileType] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n      \n\n    const handleSubmit = (e) => {\n      const data = new FormData();\n\n      data.append('file', selectedFile);\n      console.log(selectedFile);\n      console.log(data);\n\n      //Image translation api\n      axios.post('http://127.0.0.1:5000/read', data)\n        .then(response => response)\n        .then(result => {\n            \n            console.log(JSON.stringify(result.data));\n            success();    \n            onClickHandler();  \n\n        })\n        .catch(error => console.log('error', error));\n    }\n    const handleFileSelect = (event) => {\n      setSelectedFile(event.target.files[0]);\n      setFileName(event.target.files[0].name);\n      setFileType(event.target.files[0].type);\n    }\n\n    const onClickHandler = () => {\n        setState('loading');\n        setTimeout(() => {\n            setState('success');\n        }, 2000);\n    }\n\n    const success = () => {\n        toastMixin.fire({\n        animation: true,\n        title: 'File Upload Successful!'\n        });\n        navigate('/home/ImageTranslation');\n    }\n\n     const error = () => {\n        toastMixin.fire({\n        title: 'File format not supported!',\n        icon: 'error'\n        });\n    }\n\n    const context = useContext(Context);\n\n    return (\n        <div className= {styles.main}>\n            <Header/>\n            <select className = {styles.dropDown} value = {context.locale} onChange={context.selectLang}>\n                <option value = \"en\">English</option>\n                <option value = \"ur\">Urdu</option>\n            </select> \n            <div className= {styles.top}>\n                <h1 className= {styles.uploadFile}>\n                    <FormattedMessage\n                    id = \"uploadImages.uploadImage\"\n                    /> \n                </h1>   \n\n                <p className= {styles.fileSetting}>\n                    <FormattedMessage\n                    id = \"uploadImage.imageSettings\"\n                    /> \n                </p>\n                <div className = {styles.pictureBox}>\n                    <img src = {uploadFilePicture} alt = \"upload File\" className = {styles.picture}/>\n                    <p className= {styles.browseFile}>\n                        <FormattedMessage\n                            id = \"uploadImage.image\"\n                        />    \n                    </p>\n\n                    <br/>\n                    <input type=\"file\" onChange = {handleFileSelect}/> \n                    <ReactiveButton\n                        className = {styles.button} \n                        idleText={'Upload Files'}\n                        buttonState={state}\n                        onClick={()=> { handleSubmit();}}\n                        loadingText={'Uploading'}\n                        color={'#d09072'}\n                    />\n\n                </div>\n\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}