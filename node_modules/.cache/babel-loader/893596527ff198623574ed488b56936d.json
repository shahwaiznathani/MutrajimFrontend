{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahwaiz Nathani\\\\Desktop\\\\mutrajim-fyp\\\\Mehnat-o-Musshakat\\\\src\\\\components\\\\uploadFile\\\\UploadFiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, state } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\nimport styles from './UploadFiles.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport { Link } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'json',\n  label: 'Simple JSON (.json)'\n} // { value: 'arb', label: 'ARB (.arb)' },\n// { value: 'yml', label: 'Ruby (.yml)' },\n// { value: 'po', label: 'Gettext (.po)' },\n// { value: 'xml', label: '.xml' }\n];\nexport default function UploadFiles() {\n  _s();\n\n  //Notifier Settings\n  const navigate = useNavigate();\n  var toastMixin = Swal.mixin({\n    toast: true,\n    icon: 'success',\n    title: 'General Title',\n    animation: false,\n    position: 'top-right',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: toast => {\n      toast.addEventListener('mouseenter', Swal.stopTimer);\n      toast.addEventListener('mouseleave', Swal.resumeTimer);\n    }\n  });\n  const [selectedFile, setSelectedFile] = useState();\n  const [Name, setFileName] = useState(\"\");\n  const [Type, setFileType] = useState(\"\");\n\n  const handleSubmit = e => {\n    //   e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    console.log(selectedFile);\n    console.log(formData); //Upload File To Directory\n\n    createApiEndpoint(ENDPOINTS.FILEUPLOAD).create(formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => console.log(err)); //post file data in file setiing\n\n    const filedata = {\n      name: Name,\n      type: Type\n    };\n    createApiEndpoint(ENDPOINTS.FILESETTING).create(filedata).then(res => {\n      var uid = sessionStorage.getItem('UserId');\n      var fid = res.data.fileID;\n      console.log(res.data.fileID); //Patch Locale Id to User Table\n\n      createApiEndpoint(ENDPOINTS.PATCHFILEID).create({\n        UserId: uid,\n        FileId: fid\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => console.log(err));\n      success();\n    }).catch(err => console.log(err)); //Exract file data and add to database\n\n    createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().then(res => {\n      console.log(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const handleFileSelect = event => {\n    setSelectedFile(event.target.files[0]);\n    setFileName(event.target.files[0].name);\n    setFileType(event.target.files[0].type);\n    console.log(event.target.files[0]);\n  };\n\n  const [state, setState] = useState('idle');\n\n  const onClickHandler = () => {\n    setState('loading');\n    setTimeout(() => {\n      setState('success');\n    }, 2000);\n  };\n\n  const success = () => {\n    toastMixin.fire({\n      animation: true,\n      title: 'File Upload Successful!'\n    });\n    navigate('/home');\n  };\n\n  const error = () => {\n    toastMixin.fire({\n      title: 'You must choose a file format!',\n      icon: 'error'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.top,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.uploadFile,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadFiles.uploadFile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.fileSetting,\n        children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n          id: \"uploadFiles.fileSettings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pictureBox,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadFilePicture,\n          alt: \"upload File\",\n          className: styles.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.uploadMessage,\n          children: /*#__PURE__*/_jsxDEV(FormattedMessage, {\n            id: \"uploadFiles.fileUpload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: styles.selectFormat,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactiveButton, {\n          shadow: true,\n          className: styles.button,\n          idleText: 'Upload Files',\n          buttonState: state,\n          onClick: () => {\n            onClickHandler();\n            handleSubmit();\n          },\n          loadingText: 'Uploading',\n          color: '#D09072'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UploadFiles, \"+fWPyl9DvyO8ZOxgBrOmejDhKAc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UploadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFiles\");","map":{"version":3,"sources":["C:/Users/Shahwaiz Nathani/Desktop/mutrajim-fyp/Mehnat-o-Musshakat/src/components/uploadFile/UploadFiles.js"],"names":["React","Component","state","useState","Select","FormattedMessage","ReactiveButton","Context","styles","Header","uploadFilePicture","createApiEndpoint","ENDPOINTS","Link","Swal","useNavigate","options","value","label","UploadFiles","navigate","toastMixin","mixin","toast","icon","title","animation","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","selectedFile","setSelectedFile","Name","setFileName","Type","setFileType","handleSubmit","e","formData","FormData","append","console","log","FILEUPLOAD","create","headers","then","res","catch","err","filedata","name","type","FILESETTING","uid","sessionStorage","getItem","fid","data","fileID","PATCHFILEID","UserId","FileId","success","FILEDATAPUT","handleFileSelect","event","target","files","setState","onClickHandler","setTimeout","fire","error","main","top","uploadFile","fileSetting","pictureBox","picture","uploadMessage","selectFormat","button"],"mappings":"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","sourcesContent":["import React, { Component, state } from 'react';\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { FormattedMessage } from \"react-intl\";\nimport ReactiveButton from 'reactive-button';\nimport { Context } from '../wrapper/Wrapper.js';\n\nimport styles from './UploadFiles.module.css';\nimport Header from '../header/header';\nimport uploadFilePicture from './upload.png';\nimport { createApiEndpoint, ENDPOINTS } from \"../../api\";\nimport { Link } from 'react-router-dom';\nimport Swal from \"sweetalert2\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst options = [\n    { value: 'json', label: 'Simple JSON (.json)' },\n    // { value: 'arb', label: 'ARB (.arb)' },\n    // { value: 'yml', label: 'Ruby (.yml)' },\n    // { value: 'po', label: 'Gettext (.po)' },\n    // { value: 'xml', label: '.xml' }\n]\n\n\n\nexport default function UploadFiles () {\n\n    //Notifier Settings\n    const navigate = useNavigate();\n    var toastMixin = Swal.mixin({\n        toast: true,\n        icon: 'success',\n        title: 'General Title',\n        animation: false,\n        position: 'top-right',\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: (toast) => {\n          toast.addEventListener('mouseenter', Swal.stopTimer)\n          toast.addEventListener('mouseleave', Swal.resumeTimer)\n        }\n      });\n\n    const [selectedFile, setSelectedFile] = useState();\n    const [Name, setFileName] = useState(\"\");\n    const [Type, setFileType] = useState(\"\");\n\n    const handleSubmit = (e) => {\n    //   e.preventDefault();\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      console.log(selectedFile);\n      console.log(formData);\n      //Upload File To Directory\n      createApiEndpoint(ENDPOINTS.FILEUPLOAD).create(formData, {\n            headers: {\n            \"Content-Type\": \"multipart/form-data\"\n            }\n        }).then(res => {\n                console.log(res);\n        }).catch(err => console.log(err) )\n\n      //post file data in file setiing\n      const filedata = {name: Name, type: Type};\n      createApiEndpoint(ENDPOINTS.FILESETTING).create(filedata).\n            then(res => {\n                var uid = sessionStorage.getItem('UserId');\n                var fid = res.data.fileID;\n                console.log(res.data.fileID);\n                //Patch Locale Id to User Table\n                createApiEndpoint(ENDPOINTS.PATCHFILEID).create({UserId:uid, FileId:fid}).\n                    then(res => {\n                        console.log(res.data);\n                    }).\n                    catch(err => console.log(err) ) ;  \n                success();    \n            }).\n            catch(err => console.log(err) )  \n\n      \n      //Exract file data and add to database\n      createApiEndpoint(ENDPOINTS.FILEDATAPUT).create().\n            then(res => {\n              console.log(res.data);\n            }).\n            catch(err => console.log(err) )    \n         }\n\n    const handleFileSelect = (event) => {\n      setSelectedFile(event.target.files[0]);\n      setFileName(event.target.files[0].name);\n      setFileType(event.target.files[0].type);\n      console.log(event.target.files[0])\n    }\n\n\n\n    const [state, setState] = useState('idle');\n\n    const onClickHandler = () => {\n        setState('loading');\n        setTimeout(() => {\n            setState('success');\n        }, 2000);\n    }\n\n    const success = () => {\n        toastMixin.fire({\n        animation: true,\n        title: 'File Upload Successful!'\n        });\n        navigate('/home');\n    }\n\n     const error = () => {\n        toastMixin.fire({\n        title: 'You must choose a file format!',\n        icon: 'error'\n        });\n    }\n\n    return (\n        <div className= {styles.main}>\n            <Header/>\n            <div className= {styles.top}>\n                <h1 className= {styles.uploadFile}>\n                    <FormattedMessage\n                    id = \"uploadFiles.uploadFile\"\n                    /> \n                </h1>\n\n                <p className= {styles.fileSetting}>\n                    <FormattedMessage\n                    id = \"uploadFiles.fileSettings\"\n                    /> \n                </p>\n                <div className = {styles.pictureBox}>\n                    <img src = {uploadFilePicture} alt = \"upload File\" className = {styles.picture}/>\n                    \n                    <input type=\"file\" onChange = {handleFileSelect}/> \n                   \n\n                    <p className= {styles.uploadMessage}>\n                        <FormattedMessage  \n                            id = \"uploadFiles.fileUpload\"\n                          />\n                    </p>\n\n                    <Select className = {styles.selectFormat} options={options} />\n\n                    <ReactiveButton shadow\n                        className = {styles.button} \n                        idleText={'Upload Files'}\n                        buttonState={state}\n                        onClick={()=> {onClickHandler(); handleSubmit();}}\n                        loadingText={'Uploading'}\n                        color={'#D09072'}\n                    />\n\n                </div>\n\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}